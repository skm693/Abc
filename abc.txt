#include <stdio.h>

// Function to implement First Come First Serve (FCFS) scheduling

void FCFS (int bt[], int n)

 {

    int wt[n], tat[n], total_wt = 0, total_tat = 0;

   // First process has zero waiting time

    wt[0] = 0;

    // Calculate waiting time for each process

    for (int i = 1; i < n; i++) {

        wt[i] = wt[i - 1] + bt[i - 1];

        total_wt += wt[i];

    }

 // Calculate turnaround time for each process

    for (int i = 0; i < n; i++) 

{

   Tat [i] = wt[i] + bt[i];

        total_tat += tat[i];

    }

 // Calculate average waiting and turnaround times

    float avg_wt = (float)total_wt / n;

    float avg_tat = (float)total_tat / n;

    // Display process details

    Printf ("\nProcess\tBurst Time\tWaiting Time\tTurnaround Time\n");

    Printf ("-------------------------------------------------\n");

    for (int i = 0; i < n; i++)

 {

        Printf ("%d\t%d\t\t%d\t\t%d\n", i + 1, bt[i], wt[i], tat[i]);

    }

    Printf ("\nAverage Waiting Time: %.2f\n", avg_wt);

    Printf ("Average Turnaround Time: %.2f\n", avg_tat);

}



int main () 

{

    int n;

    // Input number of processes

    Printf ("Enter the number of processes: ");

    Scanf ("%d", &n);

    int bt [n];

    // Input burst time for each process

    printf("Enter Burst Time for each process:\n");

    for (int i = 0; i < n; i++) 

{

  Printf ("Process %d Burst Time: ", i + 1);

        Scanf ("%d", &bt[i]);

    }

    // Call FCFS scheduling function 

    FCFS (bt, n);

    return 0;

}

